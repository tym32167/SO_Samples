/*
 * Developed by Artem Muradov
 */

package com.company;


import org.openjdk.jmh.annotations.Benchmark;
import org.openjdk.jmh.annotations.BenchmarkMode;
import org.openjdk.jmh.annotations.Mode;
import org.openjdk.jmh.runner.RunnerException;

import java.io.IOException;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;


public class Main {

    public static void main(String[] args) throws IOException, RunnerException {
        // org.openjdk.jmh.Main.main(args);

        System.out.println("sdlkjhfsdkjfhsdklj");
    }

    @Benchmark
    @BenchmarkMode(Mode.AverageTime)
    public static void Test1(){
        String s
        int odd = 0, even = 0;

        for (int i = 0; i < s.length(); i++)
            if ((s.charAt(i) - '0') % 2 == 0) even++;
            else odd++;

//        System.out.println("odd: "  + odd + " even: " + even);
    }

    @Benchmark
    @BenchmarkMode(Mode.AverageTime)
    public static void Test2(){
        String s
        Map<Boolean, List<Integer>> r = s.chars()
                .filter(Character::isDigit)
                .map(c -> Character.digit(c, 10))
                .boxed()
                .collect(Collectors.partitioningBy(i -> i % 2 == 0));

        int even = r.get(true).size();
        int odd = r.get(false).size();
//        System.out.println("Чётных: " + r.get(true).size());
//        System.out.println("Нечётных: " + r.get(false).size());
    }

    @Benchmark
    @BenchmarkMode(Mode.AverageTime)
    public static void Test3(){
        String s
        int even = 0;
        int odd = 0;
        for (String n : s.split("")) {
            if (Integer.valueOf(n) % 2 == 0)
                even++;
            else
                odd++;
        }

//        System.out.println("Чётных: " + even);
//        System.out.println("Чётных: " + odd);
    }


//
//
//    public static void mt() throws ExecutionException, InterruptedException {
//
//
//        var cl = Main.class;
//
//
//        Logger logger
//                = Logger.getLogger(Logger.GLOBAL_LOGGER_NAME);
//
//
//        var cc = logger.getClass();
//
//        System.out.println(cc);
//
//
//        var pool = Executors.newFixedThreadPool(10);
//        Future<Integer>[] futures = new FutureTask[10];
//
//        for (int i = 0; i < futures.length; i++) {
//            logger.info("Creating futures");
//            futures[i] = pool.submit(new Foo());
//        }
//
//
//        for (int i = 0; i < futures.length; i++) {
//            logger.info("Waiting for " + i);
//            var f = futures[i];
//            var ret = f.get();
//            logger.info("Result for " + i + " is " + ret);
//        }
//
//        pool.shutdown();
//        logger.info("END");
//    }
//
//
//    public static void Logger() {
//        // Create a Logger
//        Logger logger
//                = Logger.getLogger("");
//
//
//        logger.setLevel(Level.FINER);
//
//        var handler = new ConsoleHandler();
//
//        handler.setLevel(Level.FINER);
//
//        var fmt = new SimpleFormatter();
//        handler.setFormatter(fmt);
//
//
//        // logger.addHandler(handler);
//
//
//        logger.setLevel(Level.FINER);
//
//        logger.info("lskdhjfsdl");
//
//
//        logger.entering(Main.class.getName(), "main");
//        logger.entering(List.class.getName(), "toString()");
//
//    }
//
//
//    public static void ImageProc() throws IOException {
//        String fname = "D:\\temp\\154800137443598227.png";
//        File f = new File(fname);
//        BufferedImage image = ImageIO.read(f);
//    }
//
//    public static void Props() throws IOException {
//
//        Properties p = new Properties();
//
//        try (Reader r = new InputStreamReader(Main.class.getResourceAsStream("user.properties"))) {
//            p.load(r);
//            System.out.println(p);
//        }
//
//
//        p.setProperty("foo", "bar");
//
//        System.out.println(p.getProperty("foo"));
//
//        try (Writer w = Files.newBufferedWriter(Paths.get("myprops.props"))) {
//            p.store(w, "comment");
//        }
//
//        try (OutputStream w = Files.newOutputStream(Paths.get("myprops.xml"))) {
//            p.storeToXML(w, "comment");
//        }
//    }
//
//
//    public static void Foo() {
//        List<String> list = new ArrayList<>();
//
//        list.add("1");
//        list.add("2");
//
//
//        list.addAll(Arrays.asList(new String[]{"3", "4"}));
//
//
//        list.forEach(x -> System.out.println(x));
//
//    }
//
//
//    public static void Enclosing() {
//        ArrayList<Integer> list = new ArrayList<>();
//        list.add(10);
//
//        try {
//            for (int i : list) {
//                list.add(i);
//                System.out.println(list.size());
//                if (list.size() / 0 > 100) break;
//            }
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//    }
}


